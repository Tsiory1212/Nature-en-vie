<?php
namespace App\Service\Paypal;

use Exception;

class PaypalService  
{
    public $secret;
    public $id;
    public $idSubscriptionPlanPaypal;

    public function __construct()
    {
        $this->id = $_ENV['PAYPAL_CLIENT_ID'];
        $this->secret = $_ENV['PAYPAL_SECRET'];
    }

    public function getToken()
    {
        $token = "A21AALAuUM3ij-AjCAIPLwyhYJ0zr0ChITuv65-kzUX5aZiaaR_NU5Opoxnu0Bg6t5GT6_6SWOKeRadnSpq6FNbWIK3aIDnIQ";
        $id = "PROD-1Y167084C2387742T";
        $id2 = "PROD-8HR76605UH234030V";
        $idPlan = "P-8NY11344M4516323MMGR6BBI";

        $after_subscription = "https://www.sandbox.paypal.com/webapps/billing/subscriptions?ba_token=BA-09V721054A432291J";
        
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api.sandbox.paypal.com/v1/oauth2/token');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=client_credentials");
        curl_setopt($ch, CURLOPT_USERPWD, 'AejDe8npawcVwhnfiyfg6XOPc2q5izXIvWPivKpXBTJHhJE9Wuj0bcF5PYIfICgHlS5AexPaAyYT5NJn' . ':' . 'EHOx9qAYFkFy5RcmNSy3iGk9a1pqF265SZIu2JdmJzHmqo0LNO-83hthXMyePsg0M9ZQ4J2PIsAUt4yp');

        $headers = array();
        $headers[] = 'Accept: application/json';
        $headers[] = 'Accept-Language: en_US';
        $headers[] = 'Content-Type: application/x-www-form-urlencoded';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            throw new Exception( curl_error($ch), true);
        }

        curl_close($ch);
        return json_decode($result, true)['access_token'];  
    }

    /**
     * Permet de créer un produit afin de le relier par un plan d'abonnement
     *
     * @param string $name
     * @param string $description
     */
    public function createProduct($name, $description)
    {
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api.sandbox.paypal.com/v1/catalogs/products');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n  \"name\" : $name ,\n\"description\": $description\n}");

        $headers = array();
        $headers[] = 'Authorization: Bearer '.$this->getToken();
        $headers[] = 'Content-Type: application/json';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);
        return json_decode($result, true);  
    }

    /**
     * Permet de créer un plan d'abonnement
     * NB : le type du price doit être en string
     *
     * @param string $planName
     * @param string $planDescription
     * @param integer $durationMonth
     * @param string $price
     */
    public function createSubscriptionPlan(string $productId, string $planName, string $planDescription, int $durationMonth, string $price)
    {
      $ch = curl_init();

      curl_setopt($ch, CURLOPT_URL, 'https://api-m.sandbox.paypal.com/v1/billing/plans');
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($ch, CURLOPT_POST, 1);
      curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n      \"product_id\": \"$productId\",\n      \"name\": \"$planName\",\n      \"description\": \"$planDescription\",\n      \"billing_cycles\": [\n        {\n            \"frequency\": {\n                \"interval_unit\": \"MONTH\",\n                \"interval_count\": 1\n            },\n            \"tenure_type\": \"REGULAR\",\n            \"sequence\": 1,\n            \"total_cycles\": $durationMonth,\n            \"pricing_scheme\": {\n                \"fixed_price\": {\n                    \"value\": \"$price\",\n                    \"currency_code\": \"EUR\"\n                }\n            }\n        }\n      ],\n      \"payment_preferences\": {\n        \"auto_bill_outstanding\": true,\n        \"setup_fee_failure_action\": \"CONTINUE\",\n        \"payment_failure_threshold\": 3\n      }\n    }");

      $headers = array();
      $headers[] = 'Accept: application/json';
      $headers[] = 'Authorization: Bearer '.$this->getToken();
      $headers[] = 'Prefer: return=representation';
      $headers[] = 'Content-Type: application/json';
      curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

      $result = curl_exec($ch);
      if (curl_errno($ch)) {
        throw new Exception( curl_error($ch), true);
    }
      curl_close($ch);
      $response =  json_decode($result, true);

      $this->idSubscriptionPlanPaypal =  $response['id'];
      return $response;
    }

    public function getCurrentTime()
    {
        return date('Y-m-d\\TH:i:s\\Z', time());
    }

    public function pushRequestID($id)
    {
        // push $id to your database and relate it to your customer
        
        //paypal_agreement_requests
        // customer_id VARCHAR(16), agreement_id VARCHAR(14), created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    }

    public function getAprovalURL($planid)
    {
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api-m.sandbox.paypal.com/v1/billing/subscriptions');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);

        $time = $this->getCurrentTime();

        curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n      \"plan_id\": $planid,\n      \"start_time\": $time,\n      \"application_context\": {\n        \"brand_name\": \"example company\",\n        \"locale\": \"fr-FR\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"SUBSCRIBE_NOW\",\n        \"payment_method\": {\n          \"payer_selected\": \"PAYPAL\",\n          \"payee_preferred\": \"IMMEDIATE_PAYMENT_REQUIRED\"\n        },\n        \"return_url\": \"https://example.com/returnUrl\",\n        \"cancel_url\": \"https://example.com/cancelUrl\"\n      }\n    }");

        $headers = array();
        $headers[] = 'Accept: application/json';
        // $headers[] = 'Authorization: _ENV["Bearer .this->getToken()"];
        $headers[] = 'Authorization: _ENV["Bearer .this->getToken()"]';
        $headers[] = 'Prefer: return=representation';
        $headers[] = 'Content-Type: application/json';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            throw new Exception( curl_error($ch), true);
        }
        curl_close($ch);
        $response = json_decode($result, true);
        $this->pushRequestID($response->id);
        return $response->link[0]->href;

    }

    public function customerIdFromRequestId($id)
    {
       //SELECT customer_id FROM paypal_agreement_requests WHERE agreement_id=:id;
       // :id => $id;
       // return $data->customer_id;
    }

    public function getAgreement($id)
    {
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api-m.sandbox.paypal.com/v1/payments/billing-agreements/'.$id);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


        $headers = array();
        $headers[] = 'Content-Type: application/json';
        $headers[] = 'Authorization: Bearer '.$this->getToken();
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);
        return json_decode($result, true);

    }

    /*** ORIGINAL */
    // public function processBody($body = file_get_contents('php://input'))
    // {
    //     $agreementId = $body->ressource->id;

    //     $agreement = $this->getAgreement($id);
    //     $status = $agreement->status;



    //     if ($status == 'ACTIVE') {
    //         $customer = new Customer();
    //         $customer = $customer->fromId($this->customerIdFromRequestId());
    //         $customer->setSubscribed(true);
    //     } else if($status == 'ACTIVE') {
    //         $customer->setSubscribed(true);
    //     } else{
    //         $customer->setSubscribed(false);
    //         $customer->sendNotification("your plan subscription status its ".$status.", please, renew it by clicking here: ".$agreement->links[1]->href." or cancel it here: ".$agreement->links[0]->href);
    //     }
    // }

    public function processBody($id)
    {
        $body = file_get_contents('php://input');
        $agreementId = $body->ressource->id;

        $agreement = $this->getAgreement($id);
        $status = $agreement->status;



        if ($status == 'ACTIVE') {
            $customer = new Customer();
            $customer = $customer->fromId($this->customerIdFromRequestId($id));
            $customer->setSubscribed(true);
        } else if($status == 'ACTIVE') {
            $customer->setSubscribed(true);
        } else{
            $customer->setSubscribed(false);
            $customer->sendNotification("your plan subscription status its ".$status.", please, renew it by clicking here: ".$agreement->links[1]->href." or cancel it here: ".$agreement->links[0]->href);
        }
    }

/**
    ---------------------REDIRECT TO APPROVE------------------------
    $paypalAPI = new Paypal();
    $agreementURL = $paypalAPI->getAprovalURL();
    header("Location:".$agreementURL);

    ---------------------WEBHOOK RESPONSE ENDPOINT------------------------
    $paypalAPI = new Paypal();
    $paypalAPI->processBody(file_get_contents('php://input));
 */
}
